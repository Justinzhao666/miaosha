<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--该文件用于整合mybatis，dao层的整合-->

    <!--第一步: 配置数据连接参数-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>

    <!--第二步：配置连接池，这里配置的是c3p0的连接池-->
    <bean id="datasource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--开始注入： 数据库连接信息注入到连接池中-->
        <property name="driverClass" value="${driver}"></property>
        <property name="jdbcUrl" value="${url}"></property>
        <property name="user" value="${user}"></property>
        <property name="password" value="${password}"></property>

        <!--配置连接池 私有属性-->
        <property name="maxPoolSize" value="30"></property>
        <property name="minPoolSize" value="10"></property>
        <property name="autoCommitOnClose" value="false"></property>
        <property name="checkoutTimeout" value="1000"></property>  <!--连接池满 其他连接超时时间，0表示一直等待-->
        <property name="acquireRetryAttempts" value="2"></property> <!--当连接获取失败的重试次数-->
    </bean>

    <!--第三步： 配置sqlSessionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--这里面才是真正的mybatis整合部分-->
        <!--1. 注入数据库连接池-->
        <property name="dataSource" ref="datasource"></property>
        <!--2. 配置mybatis全局配置文件，即为 mybatis-config.xml-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>  <!--classpath指代目录就是java目录和resources目录-->
        <!--3. 扫描实体类，将其映射为别名-->
        <property name="typeAliasesPackage" value="top.zhaohaoren.miaosha.entity"></property>
        <!--4. 扫描mapper的xml文件sql-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
    </bean>

    <!--第四步：扫描Dao接口，动态实现Dao接口，注入到spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <!--给出要扫描的dao接口包-->
        <property name="basePackage" value="top.zhaohaoren.miaosha.dao"></property>
    </bean>

    <!--配置redisDao-->
    <bean id="redisDao" class="top.zhaohaoren.miaosha.dao.cache.RedisDao">
        <constructor-arg index="0" value="localhost"/>
        <constructor-arg index="1" value="6379"/>
    </bean>
</beans>